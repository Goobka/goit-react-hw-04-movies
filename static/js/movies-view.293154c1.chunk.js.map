{"version":3,"sources":["services/fetchMovies.js","images/default-opt.jpg","services/formatData.js","components/MovieCard/MovieCard.module.css","components/MoviesList/MoviesList.module.css","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","views/MoviesView.js"],"names":["key","request","requestStr","a","axios","get","then","res","data","catch","console","error","fetchResult","fetchMovies","requestMovieDetails","movieId","requestTrendMovies","requestSearchMovie","query","formatData","poster_path","release_date","genres","vote_average","otherInfo","imgUrl","defaultImg","release_year","slice","genresList","map","elem","name","join","score","module","exports","MovieCard","movieInfo","title","className","styles","movie__thumb","src","alt","movie__text","withRouter","movies","location","id","movies__item","to","pathname","routes","state","from","Searchbar","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","SearchForm","this","type","SearchForm__button","SearchForm__button__label","SearchForm__input","autoComplete","autoFocus","placeholder","onChange","Component","MoviesView","searchQuery","onChangeQuery","history","push","search","paramsSearch","URLSearchParams","prevProps","prevState","snapshot","response","results","Container","MoviesList"],"mappings":"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","file":"static/js/movies-view.293154c1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst key = '9c8d439d1b89eedd1730750924a6446b';\n\nconst requestMovieDetails = movieId => {\n  const requestStr = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}&append_to_response=reviews,credits`;\n  return request(requestStr);\n};\nconst requestTrendMovies = () => {\n  const requestStr = `https://api.themoviedb.org/3/trending/movie/week?api_key=${key}&language='en-US'`;\n  return request(requestStr);\n};\nconst requestSearchMovie = query => {\n  const requestStr = `https://api.themoviedb.org/3/search/movie?api_key=${key}&page=1&query=${query}&language='en-US'`;\n  return request(requestStr);\n};\n\nconst request = async requestStr => {\n  const fetchResult = await axios\n    .get(requestStr)\n    .then(res => res.data)\n    .catch(console.error);\n  return fetchResult;\n};\n\nconst fetchMovies = {\n  requestMovieDetails,\n  requestTrendMovies,\n  requestSearchMovie,\n};\n\nexport default fetchMovies;\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/default-opt.2c72dc5c.jpg\";","import defaultImg from '../images/default-opt.jpg';\nconst pathBaseUrl = 'https://image.tmdb.org/t/p/w342';\n\nconst formatData = ({\n  poster_path,\n  release_date,\n  genres,\n  vote_average,\n  ...otherInfo\n}) => {\n  return {\n    ...otherInfo,\n    imgUrl: poster_path ? pathBaseUrl + poster_path : defaultImg,\n    release_year: release_date ? release_date.slice(0, 4) : 'N/A',\n    genresList: genres ? genres.map(elem => elem.name).join(', ') : '',\n    score: vote_average * 10 + '%',\n  };\n};\n\nexport default formatData;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie__thumb\":\"MovieCard_movie__thumb__CWN3E\",\"movie__text\":\"MovieCard_movie__text__3SXR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies\":\"MoviesList_movies__3_ICe\"};","import PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\nimport formatData from '../../services/formatData';\n\nconst MovieCard = ({movieInfo}) => {\n  const { imgUrl, title, release_year } = formatData(movieInfo);\n\n  return (\n    <div>\n      <div className={styles.movie__thumb}>\n        <img className=\"movie__img\" src={imgUrl} alt=\"movie poster\" />\n      </div>\n      <p className={styles.movie__text}>{`${title}, ${release_year}`}</p>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  movieInfo: PropTypes.object.isRequired,\n};\n\nexport default MovieCard;","import { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieCard from '../MovieCard';\nimport routes from '../../routes';\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ movies, location}) => {\n  return (\n    <ul className={styles.movies}>{movies.map(({id, ...movieInfo}) => (  <li key={id} className={styles.movies__item}>\n          <Link\n            to={{\n              pathname: `${routes.movies}/${id}`,\n              state: {\n                from: location,\n              },\n            }}\n      >\n        <MovieCard movieInfo={movieInfo} />\n      </Link>\n    </li>\n    ))}\n    </ul>\n  )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default withRouter(MoviesList);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchForm__button\":\"Searchbar_SearchForm__button__wM7NY\",\"SearchForm__button__label\":\"Searchbar_SearchForm__button__label__w-x-_\",\"SearchForm__input\":\"Searchbar_SearchForm__input__1-9Kh\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = (e) => {\n    this.setState({ query: e.currentTarget.value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (!this.state.query) {\n      return;\n    }\n    this.props.onSubmit(this.state.query);\n  }\n\n  render() {\n    return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={styles.SearchForm__button}>\n            <span className={styles.SearchForm__button__label}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchForm__input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    )\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import { Component } from 'react';\nimport Container from '../components/Container';\nimport Searchbar from '../components/Searchbar';\nimport MoviesList from '../components/MoviesList';\nimport fetchMovies from '../services/fetchMovies';\n\nclass MoviesView extends Component {\n  state = {\n    movies: null,\n    searchQuery: '',\n  }\n\n  componentDidMount() {\n    if (this.props.location.search !== '') {\n      let paramsSearch = new URLSearchParams(this.props.location.search).get(\n        'query',\n      );\n      this.setState({ searchQuery: paramsSearch });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      const response = await fetchMovies.requestSearchMovie(\n        this.state.searchQuery,\n      );\n\n      this.setState({ movies: response.results });\n    }\n  }\n\n\n  onChangeQuery = (query) => {\n    const { history, location } = this.props;\n    this.setState({\n      searchQuery: query,\n    });\n    history.push({\n      ...location,\n      search: `query=${query}`,\n    });\n  }\n\n  render() {\n    return (\n      <main>\n        <Container>\n          <Searchbar onSubmit={this.onChangeQuery} />\n          {this.state.movies && <MoviesList movies={this.state.movies} />}\n        </Container>\n      </main>\n    )\n  }\n}\n\nexport default MoviesView;"],"sourceRoot":""}