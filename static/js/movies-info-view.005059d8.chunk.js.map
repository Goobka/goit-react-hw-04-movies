{"version":3,"sources":["components/MovieInfo/MovieInfo.jsx","views/MovieDetailsView.js","services/fetchMovies.js","images/default-opt.jpg","services/formatData.js","components/MovieInfo/MovieInfo.module.css"],"names":["withRouter","movie","match","locationFrom","location","state","from","dataUpdate","formatData","title","imgUrl","overview","score","release_year","genresList","reviews","isReview","results","length","className","styles","info","info__box","src","alt","info__text","info__title","info__overview","info__vote","info__genres","about","about__item","about__link","to","pathname","url","about__msg","MovieCast","lazy","MovieReview","MovieDetailsView","base_url","onClickButton","event","preventDefault","props","history","push","routes","home","a","fetchMovies","requestMovieDetails","this","params","movieId","response","setState","id","Container","type","onClick","fallback","path","render","movieCast","credits","cast","movieReview","Component","key","request","requestStr","axios","get","then","res","data","catch","console","error","fetchResult","requestTrendMovies","requestSearchMovie","query","poster_path","release_date","genres","vote_average","otherInfo","defaultImg","slice","map","elem","name","join","module","exports"],"mappings":"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","file":"static/js/movies-info-view.005059d8.chunk.js","sourcesContent":["import { Link, withRouter } from 'react-router-dom';\nimport styles from './MovieInfo.module.css';\nimport formatData from '../../services/formatData';\n\nconst MovieInfo = ({ movie, match, location }) => {\n  const locationFrom = location.state.from;\n\n  const dataUpdate = formatData(movie);\n  const {\n    title,\n    imgUrl,\n    overview,\n    score,\n    release_year,\n    genresList,\n    reviews,\n  } = dataUpdate;\n\n  const isReview = reviews?.results.length !== 0 ? true : false;\n\n  return (\n    <div className={styles.info}>\n      <div className={styles.info__box}>\n        <img src={imgUrl} alt={title} />\n        <div className={styles.info__text}>\n          <h2 className={styles.info__title}>\n            {title + ' (' + release_year + ')'}\n          </h2>\n          <p className={styles.info__overview}>\n            <span>Overview: </span>\n            {overview}\n          </p>\n          <p className={styles.info__vote}>\n            <span>User score: </span>\n            {score}\n          </p>\n          <p className={styles.info__genres}>\n            <span>Genres: </span>\n            {genresList}\n          </p>\n          </div>\n        </div>\n      <ul className={styles.about}>\n        <li className={styles.about__item} key=\"cast\">\n          <Link\n            className={styles.about__link}\n            to={{\n              pathname: `${match.url}/cast`,\n              state: { from: locationFrom },\n            }}\n          >\n            Cast\n          </Link>\n        </li>\n        {isReview ? (\n          <li className={styles.about__item} key=\"reviews\">\n            <Link\n              className={styles.about__link}\n              to={{\n                pathname: `${match.url}/reviews`,\n                state: { from: locationFrom },\n              }}\n            >\n              Reviews\n            </Link>\n          </li>\n        ) : (\n          <p className={styles.about__msg}>\n            There are no reviews for this movie!\n          </p>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default withRouter(MovieInfo);","import { Component, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Container from '../components/Container';\nimport MovieInfo from '../components/MovieInfo/MovieInfo';\nimport fetchMovies from '../services/fetchMovies';\nimport routes from '../routes';\n\nconst MovieCast = lazy(() =>\n  import('../components/MovieCast' /* webpackChunkName: \"cast\" */),\n);\nconst MovieReview = lazy(() =>\n  import('../components/MovieReview' /* webpackChunkName: \"reviews\" */),\n);\n\nclass MovieDetailsView extends Component {\n  state = {\n    base_url: 'https://image.tmdb.org/t/p/w500/',\n    movie: {},\n  };\n\n  async componentDidMount() {\n    const response = await fetchMovies.requestMovieDetails(this.props.match.params.movieId);\n    this.setState({ movie: { ...response } });\n  }\n\n  onClickButton = event => {\n    event.preventDefault();\n    const { location, history } = this.props;\n    if (location.state && location.state.from) {\n      return history.push(location.state.from);\n    }\n    history.push(routes.home);\n  };\n\n  render() {\n    return (\n      <main>\n        {this.state.movie.id && (\n          <Container>\n            <button\n              type=\"button\"\n              className=\"button-back\"\n              onClick={this.onClickButton}\n            >\n              Back\n            </button>\n            <MovieInfo movie={this.state.movie} />\n            <Suspense fallback={<></>}>\n              <Switch>\n                <Route\n                  path={`${this.props.match.path}/cast`}\n                  render={props => {\n                    return <MovieCast movieCast={this.state.movie.credits.cast} />;\n                  }}\n                />\n                ;\n                <Route\n                  path={`${this.props.match.path}/reviews`}\n                  render={props => {\n                    return <MovieReview movieReview={this.state.movie.reviews.results} />;\n                  }}\n                />\n                ;\n              </Switch>\n            </Suspense>\n          </Container>\n        )}\n      </main>\n    )\n  }\n}\n\nexport default MovieDetailsView;","import axios from 'axios';\n\nconst key = '9c8d439d1b89eedd1730750924a6446b';\n\nconst requestMovieDetails = movieId => {\n  const requestStr = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}&append_to_response=reviews,credits`;\n  return request(requestStr);\n};\nconst requestTrendMovies = () => {\n  const requestStr = `https://api.themoviedb.org/3/trending/movie/week?api_key=${key}&language='en-US'`;\n  return request(requestStr);\n};\nconst requestSearchMovie = query => {\n  const requestStr = `https://api.themoviedb.org/3/search/movie?api_key=${key}&page=1&query=${query}&language='en-US'`;\n  return request(requestStr);\n};\n\nconst request = async requestStr => {\n  const fetchResult = await axios\n    .get(requestStr)\n    .then(res => res.data)\n    .catch(console.error);\n  return fetchResult;\n};\n\nconst fetchMovies = {\n  requestMovieDetails,\n  requestTrendMovies,\n  requestSearchMovie,\n};\n\nexport default fetchMovies;\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/default-opt.2c72dc5c.jpg\";","import defaultImg from '../images/default-opt.jpg';\nconst pathBaseUrl = 'https://image.tmdb.org/t/p/w342';\n\nconst formatData = ({\n  poster_path,\n  release_date,\n  genres,\n  vote_average,\n  ...otherInfo\n}) => {\n  return {\n    ...otherInfo,\n    imgUrl: poster_path ? pathBaseUrl + poster_path : defaultImg,\n    release_year: release_date ? release_date.slice(0, 4) : 'N/A',\n    genresList: genres ? genres.map(elem => elem.name).join(', ') : '',\n    score: vote_average * 10 + '%',\n  };\n};\n\nexport default formatData;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"MovieInfo_info__2s72V\",\"about\":\"MovieInfo_about__M7ZjP\",\"about__item\":\"MovieInfo_about__item__15oR4\",\"about__link\":\"MovieInfo_about__link__18_Pe\"};"],"sourceRoot":""}